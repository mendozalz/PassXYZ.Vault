<Shell xmlns="http://schemas.microsoft.com/dotnet/2021/maui"
       xmlns:x="http://schemas.microsoft.com/winfx/2009/xaml"
       xmlns:local="clr-namespace:PassXYZ.Vault.Views"
       xmlns:style="clr-namespace:PassXYZ.Vault.Resources.Styles"
       xmlns:resources="clr-namespace:PassXYZ.Vault.Properties"
       xmlns:app="clr-namespace:PassXYZ.Vault"
       Title="PassXYZ.Vault"
       x:Class="PassXYZ.Vault.AppShell">

    <Shell.Resources>
        <ResourceDictionary>
            <Style TargetType="FlyoutItem" BasedOn="{StaticResource BaseStyle}" />

            <!--
            Default Styles for all Flyout Items
            https://docs.microsoft.com/xamarin/xamarin-forms/app-fundamentals/shell/flyout#flyoutitem-and-menuitem-style-classes
            -->
            <Style Class="FlyoutItemLabelStyle" TargetType="Label">
                <Setter Property="TextColor" Value="{StaticResource White}"></Setter>
            </Style>
            <Style Class="FlyoutItemLayoutStyle" TargetType="Layout" ApplyToDerivedTypes="True">
                <Setter Property="VisualStateManager.VisualStateGroups">
                    <VisualStateGroupList>
                        <VisualStateGroup x:Name="CommonStates">
                            <VisualState x:Name="Normal">
                                <VisualState.Setters>
                                    <Setter Property="BackgroundColor" Value="{x:OnPlatform UWP=Transparent, iOS=White}" />
                                    <Setter TargetName="FlyoutItemLabel" Property="Label.TextColor" Value="{StaticResource Primary}" />
                                </VisualState.Setters>
                            </VisualState>
                            <!--Aqui va el hover que no logra ocupar todo el ancho del FlyoutItems-->
                            <VisualState x:Name="Selected">
                                <VisualState.Setters>
                                    <Setter Property="BackgroundColor" Value="{StaticResource Primary}" />
                                </VisualState.Setters>
                            </VisualState>
                        </VisualStateGroup>
                    </VisualStateGroupList>
                </Setter>
            </Style>

            <!--
            Custom Style you can apply to any Flyout Item
            -->
            <Style Class="MenuItemLayoutStyle" TargetType="Layout" ApplyToDerivedTypes="True">
                <Setter Property="VisualStateManager.VisualStateGroups">
                    <VisualStateGroupList>
                        <VisualStateGroup x:Name="CommonStates">
                            <VisualState x:Name="Normal">
                                <VisualState.Setters>
                                    <Setter TargetName="FlyoutItemLabel" Property="Label.TextColor" Value="{StaticResource Green}" />
                                </VisualState.Setters>
                            </VisualState>
                        </VisualStateGroup>
                    </VisualStateGroupList>
                </Setter>
            </Style>
        </ResourceDictionary>
    </Shell.Resources>

    <TabBar>
        <Tab Title="{x:Static resources:Resources.action_id_login}" Icon="tab_login.png">
            <ShellContent Route="LoginPage" ContentTemplate="{DataTemplate local:LoginPage}" />
        </Tab>
        <Tab Title="{x:Static resources:Resources.menu_id_users}" Icon="tab_users.png">
            <ShellContent Route="SignUpPage" ContentTemplate="{DataTemplate local:SignUpPage}" />
        </Tab>
    </TabBar>

    <FlyoutItem Title="{x:Static resources:Resources.About}" Icon="tab_info.png" >
        <ShellContent Route="AboutPage" ContentTemplate="{DataTemplate local:AboutPage}" />
    </FlyoutItem>
    <FlyoutItem x:Name="RootItem" Title="Browse" Icon="tab_home.png">
        <ShellContent Route="RootPage" ContentTemplate="{DataTemplate local:ItemsPage}" />
    </FlyoutItem>

    <MenuItem Text="Logout" IconImageSource="tab_login.png" Clicked="OnMenuItemClicked">
    </MenuItem>


</Shell>